version: '3'
services:
  frontend:
    build:
      context: ../../
      dockerfile: ./docker/mtg-ladder_instances/dockerfiles/angular.Dockerfile
    ports:
      - "80:4200"
    volumes:
      - ../../frontend:/usr/src/app/
      - /usr/src/app/node_modules
    command: ng serve --host 0.0.0.0 --port 4200

  swagger:
    image:
      nginx:alpine
    restart:
      always
    tty:
      true
    ports:
      - "$SWAGGER_PORT:80"
    networks:
      - net
    volumes:
      - ../../swagger/:/usr/share/nginx/html

  pg_db:
    image: 
      postgres:13.1
    restart: 
      always
    environment:
      POSTGRES_PASSWORD: $DB_PASS
      POSTGRES_USER: $DB_USER
      POSTGRES_DB: $DB_NAME
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "$DB_PORT:5432"

  backend:
    build:
        context: ../../
        dockerfile: ./docker/mtg-ladder_instances/dockerfiles/django.Dockerfile
    command: bash -c "python manage.py runserver 0.0.0.0:8000 && python manage.py makemigrations djangoProject && python manage.py migrate"
    volumes:
      - ../../backend/:/usr/src/app/
    ports:
      - "$DJANGO_PORT:8000"
    env_file:
      - .env
    depends_on:
      - pg_db
      
volumes:
  db:

networks:
  net:
    driver: bridge
    ipam:
      driver: default
      config:
        -
          subnet: $NETWORK
